{"version":3,"sources":["features/cell-container/StyledContainer.js","features/cell/StyledCell.js","context/game/context.js","app/simulation.js","context/game/actions.js","features/cell/Cell.js","features/cell-container/CellContainer.js","features/game-board/GameBoard.js","App.js","context/createReducer.js","context/game/reducer.js","features/style-utils/reset.js","features/style-utils/variables.js","features/style-utils/GlobalStyle.js","AppProviders.js","index.js"],"names":["styled","div","INITIAL_STATE","display","isRunning","currentGeneration","NO_PROVIDER","gameData","error","Error","gameDispatch","action","type","GameContext","createContext","displayName","curDisplay","currGeneration","updateGeneration","buffer","payload","Cell","row","column","value","useContext","StyledCell","className","onClick","event","newValue","updateDiplayAt","CellContainer","StyledContainer","map","row_idx","cellValue","col_idx","key","simLoops","getNeighborValue","length","nextGeneration","dispatch","cell","isAlive","num_neighbors","applyRules","rtn_num","countNeighbors","console","log","JSON","stringify","stop","forEach","handle","clearInterval","GameBoard","useEffect","width","Array","fill","generation","delay","MIN_DELAY","MAX_DELAY","col","_","push","setInterval","start","next","App","initialState","handlers","updateGame","state","newDisplay","parse","createReducer","hasOwnProperty","css","palette","darkText","attentionColor","subtleBorder","bgColor","colors","attentionBorder","accent","lightText","darkBckgrnd","headerColor","bodyColor","link","linkVisited","linkHover","createGlobalStyle","reset","AppProviders","useReducer","GameReducer","StrictMode","Provider","GlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23d3889a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n// import {colors} from \"../style-utils/variables\";\r\n\r\nexport default styled.div`\r\n   display: flex;\r\n   flex-flow: row wrap;\r\n\r\n   max-height: 60rem;\r\n   max-width: 60rem;\r\n   margin-bottom: 1.7rem;\r\n   /* background-color: magenta; */\r\n`;\r\n","import styled from \"styled-components\";\r\n// import {colors} from \"../style-utils/variables\";\r\n\r\nconst alive = \"#eaea00\";\r\nconst dead = \"#353535\";\r\n\r\nexport default styled.div`\r\n   width: 2rem;\r\n   height: 2rem;\r\n   border: 1px solid darkkhaki;\r\n   /* margin: 0.1rem; */\r\n   background-color: ${dead};\r\n\r\n   &.alive {\r\n      background-color: ${alive};\r\n   }\r\n`;\r\n","import { createContext } from \"react\";\r\n\r\nexport const INITIAL_STATE = {\r\n   display: [],\r\n   isRunning: false,\r\n   currentGeneration: 0,\r\n};\r\n\r\nconst NO_PROVIDER = {\r\n   gameData: {\r\n      ...INITIAL_STATE,\r\n      error: new Error(\"You probably forgot to use a context <Provider>.\"),\r\n   },\r\n   gameDispatch: (action) => {\r\n      throw new Error(\r\n         `There was a problem dispatching ${action.type}. You probably forgot to use a context <Provider>..`\r\n      );\r\n   },\r\n};\r\n\r\nconst GameContext = createContext(NO_PROVIDER);\r\nGameContext.displayName = \"GameOfLife\";\r\n\r\nexport default GameContext;\r\n","import { updateGeneration, updateDiplayAt } from \"../context/game/actions\";\r\n\r\nconst PRESET_01 = [\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n];\r\n\r\nconst PRESET_02 = [\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n];\r\n\r\nconst PULSAR = [\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n   [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n];\r\nconst simLoops = []; //an array of interval handles to the sim-loop\r\nlet buffer = null; //map being worked on in current generation\r\nlet curDisplay; //a replica of the game display\r\nlet currGeneration; //generation represented by display\r\n\r\n/**\r\n * Get the current value of cell in the display at row and column:\r\n *    alive = 1\r\n *    dead = 0\r\n * If row or column are out of the bounds of the grid, assume the cell\r\n * is dead.\r\n * @param {number} row\r\n * @param {number} column\r\n */\r\nconst getNeighborValue = (row, column) => {\r\n   if (row >= 0 && row < curDisplay.length) {\r\n      if (column >= 0 && column < curDisplay[0].length) {\r\n         return curDisplay[row][column];\r\n      }\r\n   }\r\n\r\n   return 0;\r\n};\r\n\r\n/**\r\n * Counts the number of neighbors that are alive around the cell at\r\n * row and column in display.\r\n * @param {number} row\r\n * @param {number} column\r\n */\r\nconst countNeighbors = (row, column) => {\r\n   let rtn_num = 0;\r\n   rtn_num += getNeighborValue(row - 1, column - 1);\r\n   rtn_num += getNeighborValue(row - 1, column);\r\n   rtn_num += getNeighborValue(row - 1, column + 1);\r\n   rtn_num += getNeighborValue(row, column - 1);\r\n   rtn_num += getNeighborValue(row, column + 1);\r\n   rtn_num += getNeighborValue(row + 1, column - 1);\r\n   rtn_num += getNeighborValue(row + 1, column);\r\n   rtn_num += getNeighborValue(row + 1, column + 1);\r\n\r\n   return rtn_num;\r\n};\r\n\r\n/**\r\n * Applies the rules of Conway's Game of Life to the cell at row and\r\n * column in display.\r\n * @param {boolean} isAlive\r\n * @param {number} num_neighbors\r\n */\r\nconst applyRules = (isAlive, num_neighbors) => {\r\n   if (isAlive) {\r\n      if (num_neighbors < 2 || num_neighbors > 3) {\r\n         // Any live cell with fewer than two live neighbours dies, as if by underpopulation.\r\n         // Any live cell with more than three live neighbours dies, as if by overpopulation.\r\n         return 0;\r\n      }\r\n      // Any live cell with two or three live neighbours lives on to the next generation.\r\n   } else {\r\n      // Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\r\n      if (num_neighbors === 3) {\r\n         return 1;\r\n      }\r\n   }\r\n\r\n   return isAlive;\r\n};\r\n\r\n/**\r\n * Each call of this function represents one generation\r\n * @param {function} dispatch Used to update the frontend\r\n */\r\nconst nextGeneration = (dispatch) => {\r\n   //simulation calculations\r\n   //use display as data, but save changes to the buffer\r\n   //for each cell,\r\n   //    get number of neighbors\r\n   //    apply game-of-life rules\r\n   //    update cell in buffer\r\n   buffer = curDisplay.map((row, row_idx) =>\r\n      row.map((cell, col_idx) =>\r\n         applyRules(cell, countNeighbors(row_idx, col_idx))\r\n      )\r\n   );\r\n   currGeneration += 1;\r\n\r\n   //update the display with the buffer\r\n   dispatch(updateGeneration(buffer, currGeneration));\r\n   curDisplay = buffer;\r\n\r\n   console.log(`Generation: ${currGeneration}`);\r\n   console.log(JSON.stringify(buffer));\r\n};\r\n\r\n/**\r\n * Starts/resumes the simulation given some options\r\n * @param {object} gameData\r\n * @param {function} dispatch Used to update the frontend\r\n * @param {number} [delay=50] The number of miliseconds between generations\r\n */\r\nexport const start = ({ display, generation }, dispatch, delay = 50) => {\r\n   const MIN_DELAY = 100;\r\n   const MAX_DELAY = 1000;\r\n\r\n   if (delay < MIN_DELAY) {\r\n      delay = MIN_DELAY;\r\n   }\r\n\r\n   if (delay > MAX_DELAY) {\r\n      delay = MAX_DELAY;\r\n   }\r\n\r\n   currGeneration = generation;\r\n   curDisplay = display.map((row) => row.map((col) => col));\r\n   if (!buffer) {\r\n      buffer = curDisplay.map((row) => row.map((_) => 0));\r\n   }\r\n\r\n   simLoops.push(setInterval(nextGeneration, delay, dispatch));\r\n};\r\n\r\n/**\r\n * Stops the simulation\r\n */\r\nexport const stop = () => {\r\n   simLoops.forEach((handle) => clearInterval(handle));\r\n};\r\n\r\n/**\r\n *  Resets the current simulation\r\n * @param {Array} display The current generation of cells on the board\r\n * @param {function} dispatch Used to update the frontend\r\n */\r\nexport const reset = (display, dispatch) => {\r\n   curDisplay = display.map((row) => row.map((col) => col));\r\n   buffer = display.map((row) => row.map((_) => 0));\r\n\r\n   currGeneration = 0;\r\n   dispatch(updateGeneration(buffer, currGeneration));\r\n};\r\n\r\n/**\r\n * Renders the next generation in simulation\r\n * @param {object} gameData\r\n * @param {function} dispatch Used to update the frontend\r\n */\r\nexport const next = ({ display, generation }, dispatch) => {\r\n   if (!display || display.length <= 0) {\r\n      console.error(\"Your grid isn't initialized!\");\r\n      return;\r\n   }\r\n\r\n   currGeneration = generation;\r\n   curDisplay = display.map((row) => row.map((col) => col));\r\n   if (!buffer) {\r\n      buffer = display.map((row) => row.map((_) => 0));\r\n   }\r\n\r\n   nextGeneration(dispatch);\r\n};\r\n\r\n// start();\r\n","export const INIT_GAME = \"INIT_GAME\";\r\nexport const NEXT_GENERATION = \"NEXT_GENERATION\";\r\nexport const UPDATE_DISPLAY = \"UPDATE_DISPLAY\";\r\n\r\n//== Action Creators ==//\r\nexport const initialize = (height, width) => {\r\n   const buffer = Array(height).fill(Array(width).fill(0));\r\n   return { type: INIT_GAME, payload: { buffer, currentGeneration: 0 } };\r\n};\r\n\r\nexport const updateGeneration = (buffer, currentGeneration) => {\r\n   return { type: NEXT_GENERATION, payload: { buffer, currentGeneration } };\r\n};\r\n\r\nexport const updateDiplayAt = (row, column, newValue) => {\r\n   return { type: UPDATE_DISPLAY, payload: { row, column, newValue } };\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport StyledCell from \"./StyledCell\";\r\nimport GameContext from \"../../context/game/context\";\r\nimport { updateDiplayAt } from \"../../context/game/actions\";\r\n\r\nconst Cell = ({ row, column, value }) => {\r\n   const { gameDispatch } = useContext(GameContext);\r\n   const handleClick = (event) => {\r\n      gameDispatch(updateDiplayAt(row, column, value === 1 ? 0 : 1));\r\n   };\r\n\r\n   return (\r\n      <StyledCell\r\n         className={value === 1 ? \"alive\" : \"\"}\r\n         onClick={handleClick}\r\n      ></StyledCell>\r\n   );\r\n};\r\n\r\nexport default Cell;\r\n","import React, { useContext } from \"react\";\r\nimport StyledContainer from \"./StyledContainer\";\r\nimport Cell from \"../cell/Cell\";\r\nimport GameContext from \"../../context/game/context\";\r\n\r\nconst CellContainer = () => {\r\n   const { gameData } = useContext(GameContext);\r\n\r\n   return (\r\n      <StyledContainer>\r\n         {gameData.display.map((row, row_idx) =>\r\n            row.map((cellValue, col_idx) => (\r\n               <Cell\r\n                  key={`cell-${row_idx}_${col_idx}`}\r\n                  row={row_idx}\r\n                  column={col_idx}\r\n                  value={cellValue}\r\n               />\r\n            ))\r\n         )}\r\n      </StyledContainer>\r\n   );\r\n};\r\n\r\nexport default CellContainer;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport CellContainer from \"../cell-container/CellContainer\";\r\nimport { start, stop, reset, next } from \"../../app/simulation\";\r\nimport GameContext from \"../../context/game/context\";\r\nimport { initialize } from \"../../context/game/actions\";\r\n\r\nconst HEIGHT = 30;\r\nconst WIDTH = 30;\r\n\r\nconst GameBoard = () => {\r\n   const { gameData, gameDispatch } = useContext(GameContext);\r\n\r\n   useEffect(() => {\r\n      gameDispatch(initialize(HEIGHT, WIDTH));\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"game-board\">\r\n         <CellContainer />\r\n         <button\r\n            onClick={() => {\r\n               start(\r\n                  {\r\n                     display: gameData.display,\r\n                     generation: gameData.currentGeneration,\r\n                  },\r\n                  gameDispatch,\r\n                  200\r\n               );\r\n            }}\r\n         >\r\n            Start\r\n         </button>\r\n         <button onClick={stop}>Stop</button>\r\n         <button\r\n            onClick={() => {\r\n               reset(gameData.display, gameDispatch);\r\n            }}\r\n         >\r\n            Reset\r\n         </button>\r\n         <button\r\n            onClick={() => {\r\n               next(\r\n                  {\r\n                     display: gameData.display,\r\n                     generation: gameData.currentGeneration,\r\n                  },\r\n                  gameDispatch\r\n               );\r\n            }}\r\n         >\r\n            Next\r\n         </button>\r\n         <h1>Generation: {gameData.currentGeneration}</h1>\r\n         <div className={\"display\"}></div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GameBoard;\r\n","import React from \"react\";\r\nimport GameBoard from \"./features/game-board/GameBoard\";\r\nimport Cell from \"./features/cell/Cell\";\r\n\r\nfunction App() {\r\n   return (\r\n      <div className=\"app\">\r\n         <div className=\"app-title\">\r\n            <h1>The Game of Life</h1>\r\n            <p>by John Conway</p>\r\n         </div>\r\n         <GameBoard />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","export default (initialState, handlers) => {\r\n   return (state = initialState, action) => {\r\n      if (handlers.hasOwnProperty(action.type)) {\r\n         return handlers[action.type](state, action);\r\n      } else {\r\n         return state;\r\n      }\r\n   };\r\n};\r\n","import createReducer from \"../createReducer\";\r\nimport { INITIAL_STATE } from \"./context\";\r\nimport { NEXT_GENERATION, UPDATE_DISPLAY, INIT_GAME } from \"./actions\";\r\n/*** Add Reducers Here ***/\r\n\r\nconst updateGame = (state, { payload: { buffer, currentGeneration } }) => {\r\n   const newDisplay = JSON.parse(JSON.stringify(buffer));\r\n\r\n   return {\r\n      ...state,\r\n      display: newDisplay,\r\n      currentGeneration,\r\n   };\r\n};\r\n\r\nconst updateDisplay = (state, { payload: { row, column, newValue } }) => {\r\n   const newDisplay = JSON.parse(JSON.stringify(state.display));\r\n   newDisplay[row][column] = newValue;\r\n\r\n   return {\r\n      ...state,\r\n      display: newDisplay,\r\n   };\r\n};\r\n\r\nexport default createReducer(INITIAL_STATE, {\r\n   /** Handlers ***/\r\n   [INIT_GAME]: updateGame,\r\n   [NEXT_GENERATION]: updateGame,\r\n   [UPDATE_DISPLAY]: updateDisplay,\r\n});\r\n","import {css} from \"styled-components\";\r\n\r\n//*** CSS-Reset ***//\r\nexport default css`\r\n   /* http://meyerweb.com/eric/tools/css/reset/ \r\n      v2.0 | 20110126\r\n      License: none (public domain)\r\n   */\r\n\r\n   html, body, div, span, applet, object, iframe,\r\n   h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n   a, abbr, acronym, address, big, cite, code,\r\n   del, dfn, em, img, ins, kbd, q, s, samp,\r\n   small, strike, strong, sub, sup, tt, var,\r\n   b, u, i, center,\r\n   dl, dt, dd, ol, ul, li,\r\n   fieldset, form, label, legend,\r\n   table, caption, tbody, tfoot, thead, tr, th, td,\r\n   article, aside, canvas, details, embed, \r\n   figure, figcaption, footer, header, hgroup, \r\n   menu, nav, output, ruby, section, summary,\r\n   time, mark, audio, video {\r\n      margin: 0;\r\n      padding: 0;\r\n      border: 0;\r\n      font-size: 100%;\r\n      font: inherit;\r\n      vertical-align: baseline;\r\n   }\r\n   /* HTML5 display-role reset for older browsers */\r\n   article, aside, details, figcaption, figure, \r\n   footer, header, hgroup, menu, nav, section {\r\n      display: block;\r\n   }\r\n   body {\r\n      line-height: 1;\r\n   }\r\n   ol, ul {\r\n      list-style: none;\r\n   }\r\n   blockquote, q {\r\n      quotes: none;\r\n   }\r\n   blockquote:before, blockquote:after,\r\n   q:before, q:after {\r\n      content: '';\r\n      content: none;\r\n   }\r\n   table {\r\n      border-collapse: collapse;\r\n      border-spacing: 0;\r\n   }\r\n`;","//*** Constants ***/\r\nexport const MAX_WIDTH = \"1040px\";\r\nexport const MIN_WIDTH = \"400px\";\r\n\r\n//*** Fonts ***//\r\nexport const headerFont = `'Oswald', Sans-Serif`;\r\nexport const bodyFont = `'Quattrocento', Serif`;\r\n\r\n//*** Colors ***//\r\nconst palette = [\r\n   \"#000000\", // black [0]\r\n   \"#ffffff\", // white [1]\r\n   \"#eeeeee\", // color [2]\r\n   \"#dddddd\", // color [3]\r\n   \"#bbbbbb\", // color [4]\r\n   \"#999999\", // color [5]\r\n];\r\nconst alpha = \"ff\";\r\n\r\n//*** Named Colors ***//\r\nconst darkText = palette[0];\r\nconst lightText = palette[1];\r\nconst attentionColor = palette[1];\r\nconst attentionBorder = palette[1];\r\nconst subtleBorder = palette[0];\r\nconst bgColor = palette[5];\r\nconst darkBackground = palette[5];\r\nconst accent = palette[3];\r\n\r\n// in global styles\r\nconst headerColor = attentionColor;\r\nconst bodyColor = bgColor;\r\n// in global styles can change properties but not the name.\r\n// const overlayBackground = [\r\n//   accent + alpha,\r\n//   attentionBorder + alpha,\r\n//   attentionColor + alpha\r\n// ];\r\nconst link = darkText;\r\nconst linkVisited = darkText;\r\nconst linkHover = subtleBorder;\r\n\r\nexport const colors = {\r\n   attentionColor,\r\n   attentionBorder,\r\n   subtleBorder,\r\n   bgColor,\r\n   accent,\r\n   darkText,\r\n   lightText,\r\n   darkBckgrnd: darkBackground,\r\n   headerColor,\r\n   bodyColor,\r\n   link,\r\n   linkVisited,\r\n   linkHover,\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"./reset\";\r\nimport {\r\n   headerFont,\r\n   bodyFont,\r\n   colors,\r\n   MIN_WIDTH,\r\n   MAX_WIDTH,\r\n} from \"./variables\";\r\n\r\nexport default createGlobalStyle`\r\n   ${reset}\r\n\r\n   * {\r\n      box-sizing: border-box;\r\n   }\r\n\r\n   html {\r\n      font-size: 62.5%;\r\n   }\r\n\r\n   body {\r\n      height: 100%;\r\n      margin: 0;\r\n      background-color: ${colors.bodyColor};\r\n   }\r\n\r\n   h1, h2, h3, h4, h5 {\r\n      font-family: ${headerFont};\r\n      /* color: ${colors.headerColor}; */\r\n      font-weight: bold;\r\n   }\r\n\r\n   h1 {\r\n      font-size: 3.0rem;\r\n   }\r\n\r\n   h2 {\r\n      font-size: 2.25rem;\r\n   }\r\n\r\n   h3 {\r\n      font-size: 1.755rem;\r\n   }\r\n\r\n   h4 {\r\n      font-size: 1.5rem;\r\n   }\r\n\r\n   h5 {\r\n      font-size: 1.245rem;\r\n   }\r\n\r\n   p, h6 {\r\n      font-family: ${bodyFont};\r\n   }\r\n\r\n   h6 {\r\n      font-size: 1rem;\r\n   }\r\n\r\n   p {\r\n      font-size: 1.6rem;\r\n   }\r\n\r\n   .app {\r\n      /* background-color: ${colors.attentionColor};\r\n      color: ${colors.darkText}; */\r\n      margin: 0 auto;\r\n      min-width: ${MIN_WIDTH};\r\n      max-width: ${MAX_WIDTH};\r\n      padding: 2rem;\r\n\r\n      .app-title {\r\n         width: 18.5rem;\r\n         padding: 1.5rem 0;\r\n\r\n         p {\r\n            text-align: right;\r\n         }\r\n      }\r\n   }\r\n`;\r\n","import React, { useReducer } from \"react\";\r\nimport App from \"./App\";\r\nimport GameContext, { INITIAL_STATE } from \"./context/game/context\";\r\nimport GameReducer from \"./context/game/reducer\";\r\nimport GlobalStyle from \"./features/style-utils/GlobalStyle\";\r\n\r\nconst AppProviders = () => {\r\n   const [gameData, gameDispatch] = useReducer(GameReducer, INITIAL_STATE);\r\n\r\n   return (\r\n      <React.StrictMode>\r\n         <GameContext.Provider value={{ gameData, gameDispatch }}>\r\n            <GlobalStyle />\r\n            <App />\r\n         </GameContext.Provider>\r\n      </React.StrictMode>\r\n   );\r\n};\r\n\r\nexport default AppProviders;\r\n","import React, { useReducer } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport AppProviders from \"./AppProviders\";\r\n\r\nReactDOM.render(<AppProviders />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}